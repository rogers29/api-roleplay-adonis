"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.configureSuite = exports.runnerHooks = exports.reporters = exports.plugins = void 0;
const TestUtils_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/TestUtils"));
const preset_adonis_1 = require("@japa/preset-adonis");
exports.plugins = [(0, preset_adonis_1.assert)(), (0, preset_adonis_1.runFailedTests)(), (0, preset_adonis_1.apiClient)()];
exports.reporters = [(0, preset_adonis_1.specReporter)()];
exports.runnerHooks = {
    setup: [() => TestUtils_1.default.ace().loadCommands(), () => TestUtils_1.default.db().migrate()],
    teardown: [],
};
const configureSuite = (suite) => {
    if (suite.name === 'functional') {
        suite.setup(() => TestUtils_1.default.httpServer().start());
    }
};
exports.configureSuite = configureSuite;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vdHN0cmFwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYm9vdHN0cmFwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQVFBLDRGQUFrRDtBQUNsRCx1REFBcUY7QUFheEUsUUFBQSxPQUFPLEdBQWdDLENBQUMsSUFBQSxzQkFBTSxHQUFFLEVBQUUsSUFBQSw4QkFBYyxHQUFFLEVBQUUsSUFBQSx5QkFBUyxHQUFFLENBQUMsQ0FBQTtBQVloRixRQUFBLFNBQVMsR0FBa0MsQ0FBQyxJQUFBLDRCQUFZLEdBQUUsQ0FBQyxDQUFBO0FBYzNELFFBQUEsV0FBVyxHQUFpRDtJQUN2RSxLQUFLLEVBQUUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxtQkFBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLFlBQVksRUFBRSxFQUFFLEdBQUcsRUFBRSxDQUFDLG1CQUFTLENBQUMsRUFBRSxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDN0UsUUFBUSxFQUFFLEVBQUU7Q0FDYixDQUFBO0FBYU0sTUFBTSxjQUFjLEdBQXVDLENBQUMsS0FBSyxFQUFFLEVBQUU7SUFDMUUsSUFBSSxLQUFLLENBQUMsSUFBSSxLQUFLLFlBQVksRUFBRTtRQUMvQixLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDLG1CQUFTLENBQUMsVUFBVSxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQTtLQUNsRDtBQUNILENBQUMsQ0FBQTtBQUpZLFFBQUEsY0FBYyxrQkFJMUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZpbGUgc291cmNlOiBodHRwczovL2JpdC5seS8zdWthSFR6XG4gKlxuICogRmVlbCBmcmVlIHRvIGxldCB1cyBrbm93IHZpYSBQUiwgaWYgeW91IGZpbmQgc29tZXRoaW5nIGJyb2tlbiBpbiB0aGlzIGNvbnRyYWN0XG4gKiBmaWxlLlxuICovXG5cbmltcG9ydCB0eXBlIHsgQ29uZmlnIH0gZnJvbSAnQGphcGEvcnVubmVyJ1xuaW1wb3J0IFRlc3RVdGlscyBmcm9tICdAaW9jOkFkb25pcy9Db3JlL1Rlc3RVdGlscydcbmltcG9ydCB7IGFzc2VydCwgcnVuRmFpbGVkVGVzdHMsIHNwZWNSZXBvcnRlciwgYXBpQ2xpZW50IH0gZnJvbSAnQGphcGEvcHJlc2V0LWFkb25pcydcblxuLypcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufCBKYXBhIFBsdWdpbnNcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufFxufCBKYXBhIHBsdWdpbnMgYWxsb3dzIHlvdSB0byBhZGQgYWRkaXRpb25hbCBmZWF0dXJlcyB0byBKYXBhLiBCeSBkZWZhdWx0XG58IHdlIHJlZ2lzdGVyIHRoZSBhc3NlcnRpb24gcGx1Z2luLlxufFxufCBGZWVsIGZyZWUgdG8gcmVtb3ZlIGV4aXN0aW5nIHBsdWdpbnMgb3IgYWRkIG1vcmUuXG58XG4qL1xuZXhwb3J0IGNvbnN0IHBsdWdpbnM6IFJlcXVpcmVkPENvbmZpZz5bJ3BsdWdpbnMnXSA9IFthc3NlcnQoKSwgcnVuRmFpbGVkVGVzdHMoKSwgYXBpQ2xpZW50KCldXG5cbi8qXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbnwgSmFwYSBSZXBvcnRlcnNcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufFxufCBKYXBhIHJlcG9ydGVycyBkaXNwbGF5cy9zYXZlcyB0aGUgcHJvZ3Jlc3Mgb2YgdGVzdHMgYXMgdGhleSBhcmUgZXhlY3V0ZWQuXG58IEJ5IGRlZmF1bHQsIHdlIHJlZ2lzdGVyIHRoZSBzcGVjIHJlcG9ydGVyIHRvIHNob3cgYSBkZXRhaWxlZCByZXBvcnRcbnwgb2YgdGVzdHMgb24gdGhlIHRlcm1pbmFsLlxufFxuKi9cbmV4cG9ydCBjb25zdCByZXBvcnRlcnM6IFJlcXVpcmVkPENvbmZpZz5bJ3JlcG9ydGVycyddID0gW3NwZWNSZXBvcnRlcigpXVxuXG4vKlxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG58IFJ1bm5lciBob29rc1xufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG58XG58IFJ1bm5lciBob29rcyBhcmUgZXhlY3V0ZWQgYWZ0ZXIgYm9vdGluZyB0aGUgQWRvbmlzSlMgYXBwIGFuZFxufCBiZWZvcmUgdGhlIHRlc3QgZmlsZXMgYXJlIGltcG9ydGVkLlxufFxufCBZb3UgY2FuIHBlcmZvcm0gYWN0aW9ucyBsaWtlIHN0YXJ0aW5nIHRoZSBIVFRQIHNlcnZlciBvciBydW5uaW5nIG1pZ3JhdGlvbnNcbnwgd2l0aGluIHRoZSBydW5uZXIgaG9va3NcbnxcbiovXG5leHBvcnQgY29uc3QgcnVubmVySG9va3M6IFBpY2s8UmVxdWlyZWQ8Q29uZmlnPiwgJ3NldHVwJyB8ICd0ZWFyZG93bic+ID0ge1xuICBzZXR1cDogWygpID0+IFRlc3RVdGlscy5hY2UoKS5sb2FkQ29tbWFuZHMoKSwgKCkgPT4gVGVzdFV0aWxzLmRiKCkubWlncmF0ZSgpXSxcbiAgdGVhcmRvd246IFtdLFxufVxuXG4vKlxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG58IENvbmZpZ3VyZSBpbmRpdmlkdWFsIHN1aXRlc1xufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG58XG58IFRoZSBjb25maWd1cmVTdWl0ZSBtZXRob2QgZ2V0cyBjYWxsZWQgZm9yIGV2ZXJ5IHRlc3Qgc3VpdGUgcmVnaXN0ZXJlZFxufCB3aXRoaW4gXCIuYWRvbmlzcmMuanNvblwiIGZpbGUuXG58XG58IFlvdSBjYW4gdXNlIHRoaXMgbWV0aG9kIHRvIGNvbmZpZ3VyZSBzdWl0ZXMuIEZvciBleGFtcGxlOiBPbmx5IHN0YXJ0XG58IHRoZSBIVFRQIHNlcnZlciB3aGVuIGl0IGlzIGEgZnVuY3Rpb25hbCBzdWl0ZS5cbiovXG5leHBvcnQgY29uc3QgY29uZmlndXJlU3VpdGU6IFJlcXVpcmVkPENvbmZpZz5bJ2NvbmZpZ3VyZVN1aXRlJ10gPSAoc3VpdGUpID0+IHtcbiAgaWYgKHN1aXRlLm5hbWUgPT09ICdmdW5jdGlvbmFsJykge1xuICAgIHN1aXRlLnNldHVwKCgpID0+IFRlc3RVdGlscy5odHRwU2VydmVyKCkuc3RhcnQoKSlcbiAgfVxufVxuIl19