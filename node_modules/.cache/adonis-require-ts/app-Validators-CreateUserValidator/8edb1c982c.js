"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class CreateUserValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            username: Validator_1.schema.string({}),
            password: Validator_1.schema.string({}, [Validator_1.rules.minLength(4)]),
            email: Validator_1.schema.string({}, [Validator_1.rules.email()]),
        });
        this.messages = {};
    }
}
exports.default = CreateUserValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ3JlYXRlVXNlclZhbGlkYXRvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkNyZWF0ZVVzZXJWYWxpZGF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyRUFBMEU7QUFHMUUsTUFBcUIsbUJBQW1CO0lBQ3RDLFlBQXNCLEdBQXdCO1FBQXhCLFFBQUcsR0FBSCxHQUFHLENBQXFCO1FBcUJ2QyxXQUFNLEdBQUcsa0JBQU0sQ0FBQyxNQUFNLENBQUM7WUFDNUIsUUFBUSxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQztZQUMzQixRQUFRLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNqRCxLQUFLLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUMsaUJBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQzFDLENBQUMsQ0FBQTtRQWFLLGFBQVEsR0FBbUIsRUFBRSxDQUFBO0lBdENhLENBQUM7Q0F1Q25EO0FBeENELHNDQXdDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNjaGVtYSwgQ3VzdG9tTWVzc2FnZXMsIHJ1bGVzIH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9WYWxpZGF0b3InXG5pbXBvcnQgdHlwZSB7IEh0dHBDb250ZXh0Q29udHJhY3QgfSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0h0dHBDb250ZXh0J1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDcmVhdGVVc2VyVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGN0eDogSHR0cENvbnRleHRDb250cmFjdCkge31cblxuICAvKlxuICAgKiBEZWZpbmUgc2NoZW1hIHRvIHZhbGlkYXRlIHRoZSBcInNoYXBlXCIsIFwidHlwZVwiLCBcImZvcm1hdHRpbmdcIiBhbmQgXCJpbnRlZ3JpdHlcIiBvZiBkYXRhLlxuICAgKlxuICAgKiBGb3IgZXhhbXBsZTpcbiAgICogMS4gVGhlIHVzZXJuYW1lIG11c3QgYmUgb2YgZGF0YSB0eXBlIHN0cmluZy4gQnV0IHRoZW4gYWxzbywgaXQgc2hvdWxkXG4gICAqICAgIG5vdCBjb250YWluIHNwZWNpYWwgY2hhcmFjdGVycyBvciBudW1iZXJzLlxuICAgKiAgICBgYGBcbiAgICogICAgIHNjaGVtYS5zdHJpbmcoe30sIFsgcnVsZXMuYWxwaGEoKSBdKVxuICAgKiAgICBgYGBcbiAgICpcbiAgICogMi4gVGhlIGVtYWlsIG11c3QgYmUgb2YgZGF0YSB0eXBlIHN0cmluZywgZm9ybWF0dGVkIGFzIGEgdmFsaWRcbiAgICogICAgZW1haWwuIEJ1dCBhbHNvLCBub3QgdXNlZCBieSBhbnkgb3RoZXIgdXNlci5cbiAgICogICAgYGBgXG4gICAqICAgICBzY2hlbWEuc3RyaW5nKHt9LCBbXG4gICAqICAgICAgIHJ1bGVzLmVtYWlsKCksXG4gICAqICAgICAgIHJ1bGVzLnVuaXF1ZSh7IHRhYmxlOiAndXNlcnMnLCBjb2x1bW46ICdlbWFpbCcgfSksXG4gICAqICAgICBdKVxuICAgKiAgICBgYGBcbiAgICovXG4gIHB1YmxpYyBzY2hlbWEgPSBzY2hlbWEuY3JlYXRlKHtcbiAgICB1c2VybmFtZTogc2NoZW1hLnN0cmluZyh7fSksXG4gICAgcGFzc3dvcmQ6IHNjaGVtYS5zdHJpbmcoe30sIFtydWxlcy5taW5MZW5ndGgoNCldKSxcbiAgICBlbWFpbDogc2NoZW1hLnN0cmluZyh7fSwgW3J1bGVzLmVtYWlsKCldKSxcbiAgfSlcblxuICAvKipcbiAgICogQ3VzdG9tIG1lc3NhZ2VzIGZvciB2YWxpZGF0aW9uIGZhaWx1cmVzLiBZb3UgY2FuIG1ha2UgdXNlIG9mIGRvdCBub3RhdGlvbiBgKC4pYFxuICAgKiBmb3IgdGFyZ2V0aW5nIG5lc3RlZCBmaWVsZHMgYW5kIGFycmF5IGV4cHJlc3Npb25zIGAoKilgIGZvciB0YXJnZXRpbmcgYWxsXG4gICAqIGNoaWxkcmVuIG9mIGFuIGFycmF5LiBGb3IgZXhhbXBsZTpcbiAgICpcbiAgICoge1xuICAgKiAgICdwcm9maWxlLnVzZXJuYW1lLnJlcXVpcmVkJzogJ1VzZXJuYW1lIGlzIHJlcXVpcmVkJyxcbiAgICogICAnc2NvcmVzLioubnVtYmVyJzogJ0RlZmluZSBzY29yZXMgYXMgdmFsaWQgbnVtYmVycydcbiAgICogfVxuICAgKlxuICAgKi9cbiAgcHVibGljIG1lc3NhZ2VzOiBDdXN0b21NZXNzYWdlcyA9IHt9XG59XG4iXX0=