"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Env_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Env"));
const config_1 = require("@adonisjs/core/build/config");
exports.default = config_1.hashConfig({
    default: Env_1.default.get('HASH_DRIVER', 'scrypt'),
    list: {
        scrypt: {
            driver: 'scrypt',
            cost: 16384,
            blockSize: 8,
            parallelization: 1,
            saltSize: 16,
            keyLength: 64,
            maxMemory: 32 * 1024 * 1024,
        },
        argon: {
            driver: 'argon2',
            variant: 'id',
            iterations: 3,
            memory: 4096,
            parallelism: 1,
            saltSize: 16,
        },
        bcrypt: {
            driver: 'bcrypt',
            rounds: 10,
        },
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImhhc2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFPQSxnRkFBc0M7QUFDdEMsd0RBQXdEO0FBV3hELGtCQUFlLG1CQUFVLENBQUM7SUFVeEIsT0FBTyxFQUFFLGFBQUcsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQztJQUV6QyxJQUFJLEVBQUU7UUFjSixNQUFNLEVBQUU7WUFDTixNQUFNLEVBQUUsUUFBUTtZQUNoQixJQUFJLEVBQUUsS0FBSztZQUNYLFNBQVMsRUFBRSxDQUFDO1lBQ1osZUFBZSxFQUFFLENBQUM7WUFDbEIsUUFBUSxFQUFFLEVBQUU7WUFDWixTQUFTLEVBQUUsRUFBRTtZQUNiLFNBQVMsRUFBRSxFQUFFLEdBQUcsSUFBSSxHQUFHLElBQUk7U0FDNUI7UUFlRCxLQUFLLEVBQUU7WUFDTCxNQUFNLEVBQUUsUUFBUTtZQUNoQixPQUFPLEVBQUUsSUFBSTtZQUNiLFVBQVUsRUFBRSxDQUFDO1lBQ2IsTUFBTSxFQUFFLElBQUk7WUFDWixXQUFXLEVBQUUsQ0FBQztZQUNkLFFBQVEsRUFBRSxFQUFFO1NBQ2I7UUFlRCxNQUFNLEVBQUU7WUFDTixNQUFNLEVBQUUsUUFBUTtZQUNoQixNQUFNLEVBQUUsRUFBRTtTQUNYO0tBQ0Y7Q0FDRixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvbmZpZyBzb3VyY2U6IGh0dHBzOi8vZ2l0LmlvL0pmZWZXXG4gKlxuICogRmVlbCBmcmVlIHRvIGxldCB1cyBrbm93IHZpYSBQUiwgaWYgeW91IGZpbmQgc29tZXRoaW5nIGJyb2tlbiBpbiB0aGlzIGNvbmZpZ1xuICogZmlsZS5cbiAqL1xuXG5pbXBvcnQgRW52IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvRW52J1xuaW1wb3J0IHsgaGFzaENvbmZpZyB9IGZyb20gJ0BhZG9uaXNqcy9jb3JlL2J1aWxkL2NvbmZpZydcblxuLypcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufCBIYXNoIENvbmZpZ1xufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG58XG58IFRoZSBgSGFzaENvbmZpZ2AgcmVsaWVzIG9uIHRoZSBgSGFzaExpc3RgIGludGVyZmFjZSB3aGljaCBpc1xufCBkZWZpbmVkIGluc2lkZSBgY29udHJhY3RzYCBkaXJlY3RvcnkuXG58XG4qL1xuZXhwb3J0IGRlZmF1bHQgaGFzaENvbmZpZyh7XG4gIC8qXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8IERlZmF1bHQgaGFzaGVyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICB8XG4gIHwgQnkgZGVmYXVsdCB3ZSBtYWtlIHVzZSBvZiB0aGUgYXJnb24gaGFzaGVyIHRvIGhhc2ggdmFsdWVzLiBIb3dldmVyLCBmZWVsXG4gIHwgZnJlZSB0byBjaGFuZ2UgdGhlIGRlZmF1bHQgdmFsdWVcbiAgfFxuICAqL1xuICBkZWZhdWx0OiBFbnYuZ2V0KCdIQVNIX0RSSVZFUicsICdzY3J5cHQnKSxcblxuICBsaXN0OiB7XG4gICAgLypcbiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICB8IHNjcnlwdFxuICAgIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAgIHxcbiAgICB8IFNjcnlwdCBtYXBwaW5nIHVzZXMgdGhlIE5vZGUuanMgaW5idWlsdCBjcnlwdG8gbW9kdWxlIGZvciBjcmVhdGluZ1xuICAgIHwgaGFzaGVzLlxuICAgIHxcbiAgICB8IFdlIGFyZSB1c2luZyB0aGUgZGVmYXVsdCBjb25maWd1cmF0aW9uIHJlY29tbWVuZGVkIHdpdGhpbiB0aGUgTm9kZS5qc1xuICAgIHwgZG9jdW1lbnRhdGlvbi5cbiAgICB8IGh0dHBzOi8vbm9kZWpzLm9yZy9hcGkvY3J5cHRvLmh0bWwjY3J5cHRvc2NyeXB0cGFzc3dvcmQtc2FsdC1rZXlsZW4tb3B0aW9ucy1jYWxsYmFja1xuICAgIHxcbiAgICAqL1xuICAgIHNjcnlwdDoge1xuICAgICAgZHJpdmVyOiAnc2NyeXB0JyxcbiAgICAgIGNvc3Q6IDE2Mzg0LFxuICAgICAgYmxvY2tTaXplOiA4LFxuICAgICAgcGFyYWxsZWxpemF0aW9uOiAxLFxuICAgICAgc2FsdFNpemU6IDE2LFxuICAgICAga2V5TGVuZ3RoOiA2NCxcbiAgICAgIG1heE1lbW9yeTogMzIgKiAxMDI0ICogMTAyNCxcbiAgICB9LFxuXG4gICAgLypcbiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICB8IEFyZ29uXG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgfFxuICAgIHwgQXJnb24gbWFwcGluZyB1c2VzIHRoZSBgYXJnb24yYCBkcml2ZXIgdG8gaGFzaCB2YWx1ZXMuXG4gICAgfFxuICAgIHwgTWFrZSBzdXJlIHlvdSBpbnN0YWxsIHRoZSB1bmRlcmx5aW5nIGRlcGVuZGVuY3kgZm9yIHRoaXMgZHJpdmVyIHRvIHdvcmsuXG4gICAgfCBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waGMtYXJnb24yLlxuICAgIHxcbiAgICB8IG5wbSBpbnN0YWxsIHBoYy1hcmdvbjJcbiAgICB8XG4gICAgKi9cbiAgICBhcmdvbjoge1xuICAgICAgZHJpdmVyOiAnYXJnb24yJyxcbiAgICAgIHZhcmlhbnQ6ICdpZCcsXG4gICAgICBpdGVyYXRpb25zOiAzLFxuICAgICAgbWVtb3J5OiA0MDk2LFxuICAgICAgcGFyYWxsZWxpc206IDEsXG4gICAgICBzYWx0U2l6ZTogMTYsXG4gICAgfSxcblxuICAgIC8qXG4gICAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgfCBCY3J5cHRcbiAgICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgICB8XG4gICAgfCBCY3J5cHQgbWFwcGluZyB1c2VzIHRoZSBgYmNyeXB0YCBkcml2ZXIgdG8gaGFzaCB2YWx1ZXMuXG4gICAgfFxuICAgIHwgTWFrZSBzdXJlIHlvdSBpbnN0YWxsIHRoZSB1bmRlcmx5aW5nIGRlcGVuZGVuY3kgZm9yIHRoaXMgZHJpdmVyIHRvIHdvcmsuXG4gICAgfCBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9waGMtYmNyeXB0LlxuICAgIHxcbiAgICB8IG5wbSBpbnN0YWxsIHBoYy1iY3J5cHRcbiAgICB8XG4gICAgKi9cbiAgICBiY3J5cHQ6IHtcbiAgICAgIGRyaXZlcjogJ2JjcnlwdCcsXG4gICAgICByb3VuZHM6IDEwLFxuICAgIH0sXG4gIH0sXG59KVxuIl19