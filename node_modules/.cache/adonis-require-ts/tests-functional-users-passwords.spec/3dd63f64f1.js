"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const factories_1 = global[Symbol.for('ioc.use')]("Database/factories");
const runner_1 = require("@japa/runner");
const Mail_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Addons/Mail"));
const BASE_URL = `http://${process.env.HOST}:${process.env.PORT}`;
runner_1.test.group('Password', (group) => {
    (0, runner_1.test)('it should send and email with forgot password instructions', async ({ assert, client }) => {
        const user = await factories_1.UserFactory.create();
        const mailer = Mail_1.default.fake();
        await client
            .post('/forgot-password')
            .json({
            email: user.email,
            resetPasswordUrl: 'url',
        });
        assert.isTrue(mailer.exists({ to: [{ address: user.email }] }));
        assert.isTrue(mailer.exists({ from: { address: 'no-reply@roleplay.com' } }));
        assert.isTrue(mailer.exists({ subject: 'Roleplay: Recuperação de Senha' }));
        assert.isTrue(mailer.exists((mail) => mail.html.includes(user.username)));
        Mail_1.default.restore();
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmRzLnNwZWMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJwYXNzd29yZHMuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLHdFQUFnRDtBQUNoRCx5Q0FBbUM7QUFDbkMsb0ZBQTBDO0FBRTFDLE1BQU0sUUFBUSxHQUFHLFVBQVUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQTtBQUVqRSxhQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsRUFBRSxDQUFDLEtBQUssRUFBRSxFQUFFO0lBQy9CLElBQUEsYUFBSSxFQUFDLDREQUE0RCxFQUFFLEtBQUssRUFBRSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFO1FBQzlGLE1BQU0sSUFBSSxHQUFHLE1BQU0sdUJBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQTtRQUV2QyxNQUFNLE1BQU0sR0FBRyxjQUFJLENBQUMsSUFBSSxFQUFFLENBQUE7UUFFMUIsTUFBTSxNQUFNO2FBQ1QsSUFBSSxDQUFDLGtCQUFrQixDQUFDO2FBQ3hCLElBQUksQ0FBQztZQUNKLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztZQUNqQixnQkFBZ0IsRUFBRSxLQUFLO1NBQ3hCLENBQUMsQ0FBQTtRQUVKLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBQy9ELE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFBO1FBQzVFLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxDQUFDLENBQUMsQ0FBQTtRQUMzRSxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUE7UUFFMUUsY0FBSSxDQUFDLE9BQU8sRUFBRSxDQUFBO0lBQ2hCLENBQUMsQ0FBQyxDQUFBO0FBQ0osQ0FBQyxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBVc2VyRmFjdG9yeSB9IGZyb20gJ0RhdGFiYXNlL2ZhY3RvcmllcydcbmltcG9ydCB7IHRlc3QgfSBmcm9tICdAamFwYS9ydW5uZXInXG5pbXBvcnQgTWFpbCBmcm9tICdAaW9jOkFkb25pcy9BZGRvbnMvTWFpbCdcblxuY29uc3QgQkFTRV9VUkwgPSBgaHR0cDovLyR7cHJvY2Vzcy5lbnYuSE9TVH06JHtwcm9jZXNzLmVudi5QT1JUfWBcblxudGVzdC5ncm91cCgnUGFzc3dvcmQnLCAoZ3JvdXApID0+IHtcbiAgdGVzdCgnaXQgc2hvdWxkIHNlbmQgYW5kIGVtYWlsIHdpdGggZm9yZ290IHBhc3N3b3JkIGluc3RydWN0aW9ucycsIGFzeW5jICh7IGFzc2VydCwgY2xpZW50IH0pID0+IHtcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgVXNlckZhY3RvcnkuY3JlYXRlKClcblxuICAgIGNvbnN0IG1haWxlciA9IE1haWwuZmFrZSgpXG5cbiAgICBhd2FpdCBjbGllbnRcbiAgICAgIC5wb3N0KCcvZm9yZ290LXBhc3N3b3JkJylcbiAgICAgIC5qc29uKHtcbiAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsXG4gICAgICAgIHJlc2V0UGFzc3dvcmRVcmw6ICd1cmwnLFxuICAgICAgfSlcblxuICAgIGFzc2VydC5pc1RydWUobWFpbGVyLmV4aXN0cyh7IHRvOiBbeyBhZGRyZXNzOiB1c2VyLmVtYWlsIH1dIH0pKVxuICAgIGFzc2VydC5pc1RydWUobWFpbGVyLmV4aXN0cyh7IGZyb206IHsgYWRkcmVzczogJ25vLXJlcGx5QHJvbGVwbGF5LmNvbScgfSB9KSlcbiAgICBhc3NlcnQuaXNUcnVlKG1haWxlci5leGlzdHMoeyBzdWJqZWN0OiAnUm9sZXBsYXk6IFJlY3VwZXJhw6fDo28gZGUgU2VuaGEnIH0pKVxuICAgIGFzc2VydC5pc1RydWUobWFpbGVyLmV4aXN0cygobWFpbCkgPT4gbWFpbC5odG1sIS5pbmNsdWRlcyh1c2VyLnVzZXJuYW1lKSkpXG5cbiAgICBNYWlsLnJlc3RvcmUoKVxuICB9KVxufSlcbiJdfQ==