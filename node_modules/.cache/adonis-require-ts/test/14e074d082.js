"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
process.env.NODE_ENV = 'test';
require("reflect-metadata");
const source_map_support_1 = __importDefault(require("source-map-support"));
const standalone_1 = require("@adonisjs/core/build/standalone");
const runner_1 = require("@japa/runner");
source_map_support_1.default.install({ handleUncaughtExceptions: false });
const kernel = new standalone_1.Ignitor(__dirname).kernel('test');
kernel
    .boot()
    .then(() => Promise.resolve().then(() => __importStar(require('./tests/bootstrap'))))
    .then(({ runnerHooks, ...config }) => {
    const app = [() => kernel.start()];
    (0, runner_1.configure)({
        ...kernel.application.rcFile.tests,
        ...(0, runner_1.processCliArgs)(process.argv.slice(2)),
        ...config,
        ...{
            importer: (filePath) => Promise.resolve(`${filePath}`).then(s => __importStar(require(s))),
            setup: app.concat(runnerHooks.setup),
            teardown: runnerHooks.teardown,
        },
        cwd: kernel.application.appRoot
    });
    (0, runner_1.run)();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWNBLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxHQUFHLE1BQU0sQ0FBQTtBQUU3Qiw0QkFBeUI7QUFDekIsNEVBQWlEO0FBQ2pELGdFQUF5RDtBQUN6RCx5Q0FBaUY7QUFFakYsNEJBQWdCLENBQUMsT0FBTyxDQUFDLEVBQUUsd0JBQXdCLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQTtBQUU3RCxNQUFNLE1BQU0sR0FBRyxJQUFJLG9CQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBRXBELE1BQU07S0FDSCxJQUFJLEVBQUU7S0FDTixJQUFJLENBQUMsR0FBRyxFQUFFLG1EQUFRLG1CQUFtQixHQUFDLENBQUM7S0FDdkMsSUFBSSxDQUFDLENBQUMsRUFBRSxXQUFXLEVBQUUsR0FBRyxNQUFNLEVBQUUsRUFBRSxFQUFFO0lBQ25DLE1BQU0sR0FBRyxHQUF5QixDQUFDLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFBO0lBRXhELElBQUEsa0JBQVMsRUFBQztRQUNSLEdBQUcsTUFBTSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSztRQUNsQyxHQUFHLElBQUEsdUJBQWMsRUFBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN4QyxHQUFHLE1BQU07UUFDVCxHQUFHO1lBQ0QsUUFBUSxFQUFFLENBQUMsUUFBUSxFQUFFLEVBQUUsb0JBQVEsUUFBUSx1Q0FBQztZQUN4QyxLQUFLLEVBQUUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDO1lBQ3BDLFFBQVEsRUFBRSxXQUFXLENBQUMsUUFBUTtTQUMvQjtRQUNELEdBQUcsRUFBRSxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQU87S0FDaEMsQ0FBQyxDQUFBO0lBRUYsSUFBQSxZQUFHLEdBQUUsQ0FBQTtBQUNQLENBQUMsQ0FBQyxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLypcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxufCBUZXN0c1xufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG58XG58IFRoZSBjb250ZW50cyBpbiB0aGlzIGZpbGUgYm9vdHMgdGhlIEFkb25pc0pTIGFwcGxpY2F0aW9uIGFuZCBjb25maWd1cmVzXG58IHRoZSBKYXBhIHRlc3RzIHJ1bm5lci5cbnxcbnwgRm9yIHRoZSBtb3N0IHBhcnQgeW91IHdpbGwgbmV2ZXIgZWRpdCB0aGlzIGZpbGUuIFRoZSBjb25maWd1cmF0aW9uXG58IGZvciB0aGUgdGVzdHMgY2FuIGJlIGNvbnRyb2xsZWQgdmlhIFwiLmFkb25pc3JjLmpzb25cIiBhbmRcbnwgXCJ0ZXN0cy9ib290c3RyYXAudHNcIiBmaWxlcy5cbnxcbiovXG5cbnByb2Nlc3MuZW52Lk5PREVfRU5WID0gJ3Rlc3QnXG5cbmltcG9ydCAncmVmbGVjdC1tZXRhZGF0YSdcbmltcG9ydCBzb3VyY2VNYXBTdXBwb3J0IGZyb20gJ3NvdXJjZS1tYXAtc3VwcG9ydCdcbmltcG9ydCB7IElnbml0b3IgfSBmcm9tICdAYWRvbmlzanMvY29yZS9idWlsZC9zdGFuZGFsb25lJ1xuaW1wb3J0IHsgY29uZmlndXJlLCBwcm9jZXNzQ2xpQXJncywgcnVuLCBSdW5uZXJIb29rc0hhbmRsZXIgfSBmcm9tICdAamFwYS9ydW5uZXInXG5cbnNvdXJjZU1hcFN1cHBvcnQuaW5zdGFsbCh7IGhhbmRsZVVuY2F1Z2h0RXhjZXB0aW9uczogZmFsc2UgfSlcblxuY29uc3Qga2VybmVsID0gbmV3IElnbml0b3IoX19kaXJuYW1lKS5rZXJuZWwoJ3Rlc3QnKVxuXG5rZXJuZWxcbiAgLmJvb3QoKVxuICAudGhlbigoKSA9PiBpbXBvcnQoJy4vdGVzdHMvYm9vdHN0cmFwJykpXG4gIC50aGVuKCh7IHJ1bm5lckhvb2tzLCAuLi5jb25maWcgfSkgPT4ge1xuICAgIGNvbnN0IGFwcDogUnVubmVySG9va3NIYW5kbGVyW10gPSBbKCkgPT4ga2VybmVsLnN0YXJ0KCldXG5cbiAgICBjb25maWd1cmUoe1xuICAgICAgLi4ua2VybmVsLmFwcGxpY2F0aW9uLnJjRmlsZS50ZXN0cyxcbiAgICAgIC4uLnByb2Nlc3NDbGlBcmdzKHByb2Nlc3MuYXJndi5zbGljZSgyKSksXG4gICAgICAuLi5jb25maWcsXG4gICAgICAuLi57XG4gICAgICAgIGltcG9ydGVyOiAoZmlsZVBhdGgpID0+IGltcG9ydChmaWxlUGF0aCksXG4gICAgICAgIHNldHVwOiBhcHAuY29uY2F0KHJ1bm5lckhvb2tzLnNldHVwKSxcbiAgICAgICAgdGVhcmRvd246IHJ1bm5lckhvb2tzLnRlYXJkb3duLFxuICAgICAgfSxcbiAgICAgIGN3ZDoga2VybmVsLmFwcGxpY2F0aW9uLmFwcFJvb3RcbiAgICB9KVxuXG4gICAgcnVuKClcbiAgfSlcbiJdfQ==